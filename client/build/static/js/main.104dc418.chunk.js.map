{"version":3,"sources":["utils/index.ts","form/Calendar.tsx","utils/trpc.ts","form/index.tsx","alarm-manager.ts","list/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AlarmType","React","ref","control","displayMode","maxLength","error","help","name","onChange","required","showHeader","type","value","id","bulmaCalendarOptions","props","inputRef","calendarRef","current","BulmaCalendar","require","validateLabel","cancelLabel","clearLabel","todayLabel","nowLabel","minuteSteps","cal","on","target","startTime","startDate","removeListeners","defaultValue","client","createTRPCClient","url","transformer","superjson","trpc","createReactQueryHooks","queryClient","QueryClient","Duration","uid","window","URL","location","href","searchParams","get","Form","history","useHistory","locId","URLSearchParams","search","slice","console","log","allAlarms","useQuery","staleTime","useState","data","find","a","ahead","title","notify","alert","duration","disabled","alarm","setAlarm","editAlarm","useMutation","onMutate","cancelQuery","setQueryData","map","onSettled","invalidateQuery","addAlarm","setField","key","className","placeholder","e","repeat","once","Calendar","Date","d","setHours","getHours","setMinutes","getMinutes","now","getTime","showSecond","moment","hours","minutes","min","max","Number","defaultChecked","checked","onClick","mutate","save","goBack","push","AlarmManager","alarms","timers","Map","this","updateTimers","Notification","body","toLocaleString","vibrate","requireInteraction","timer","t","clearTimeout","clearInterval","delete","done","clearTimers","t1","setTimeout","timeout","recTimeout","set","List","sortAlarms","ids","alarmMap","filter","Boolean","saveSortList","newAlarms","deleteAlarm","alarmId","useEffect","style","flex","marginRight","u","append","nanoid","toString","aria-hidden","list","setList","dayjs","format","add","confirm","htmlFor","App","useLocation","TransitionGroup","path","Root","cx","reportWebVitals","onPerfEntry","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.104dc418.chunk.js","sourcesContent":["import type { inferHandlerInput } from '@trpc/server'\nimport type { AppRouter } from '../../../server'\nexport type AlarmCreateParam = inferHandlerInput<\n  AppRouter['_def']['mutations']['alarms.add']\n>[0]\nexport type AlarmEditParam = inferHandlerInput<\n  AppRouter['_def']['mutations']['alarms.edit']\n>[0]\nexport const emptyAlarm = (): AlarmCreateParam => ({\n  type: 'repeat',\n  ahead: 0,\n  title: '',\n  notify: true,\n  alert: false,\n  duration: 0,\n  disabled: false,\n})\n\nexport enum AlarmType {\n  once = 'once',\n  repeat = 'repeat',\n}\n\nexport const Duration = {\n  M1: 60 * 1000,\n  H1: 60 * 60 * 1000,\n}\n\nexport const IsServer = typeof window ==='undefined'\n\nconst u = IsServer ? new URL('https://localhost') : new URL(location.href)\nexport const uid = u.searchParams.get('id') || ''\n","import { Options as BulmaCalendarOptions } from 'bulma-calendar';\nimport 'bulma-calendar/dist/css/bulma-calendar.min.css'\nimport * as React from 'react';\n\ntype CalendarProps = Omit<React.ComponentPropsWithoutRef<'input'>, 'label' | 'onChange'> & {\n    control?: React.ReactElement;\n\n    displayMode?: BulmaCalendarOptions['displayMode'];\n\n    /**\n     * An error message to render.\n     */\n    error?: React.ReactNode;\n\n    /**\n     * A help message to render.\n     */\n    help?: React.ReactNode;\n\n    /**\n     * The name of the HTML element.\n     */\n    name?: string;\n\n    /**\n     * This is fired when the input value has changed.\n     *\n     * If the input type is `checkbox`, the value is a boolean. If the input type is `number`, the\n     * value is a number, otherwise it is a string.\n     */\n    onChange: (event: { target: HTMLInputElement }, value: Date) => void;\n\n    showHeader?: boolean;\n\n    /**\n     * The HTML input type.\n     *\n     * This may be extended if necessary.\n     */\n    type?: 'date' | 'time' | 'datetime'\n    bulmaCalendarOptions?: BulmaCalendarOptions\n  };\n\n/**\n * A Bulma styled form input element.\n */\nexport default React.forwardRef<HTMLInputElement, CalendarProps>(\n  (\n    {\n      control,\n      displayMode,\n      error,\n      help,\n      maxLength,\n      name,\n      onChange,\n      required,\n      showHeader = false,\n      type = 'datetime',\n      value,\n      id = name,\n      bulmaCalendarOptions,\n      ...props\n    },\n    ref,\n  ) => {\n    const inputRef = React.useRef<HTMLInputElement>();\n    const calendarRef = React.useRef<any>();\n\n    React.useImperativeHandle(ref, () => inputRef.current!);\n    React.useEffect(() => {\n      const BulmaCalendar = require('bulma-calendar')\n      calendarRef.current = new BulmaCalendar(inputRef.current!, {\n        showHeader,\n        type,\n        displayMode,\n        validateLabel: '确定',\n        cancelLabel: '取消',\n        clearLabel: '清除',\n        todayLabel: '今天',\n        nowLabel: '现在',\n        minuteSteps: 1,\n        ...bulmaCalendarOptions,\n      });\n    }, [displayMode, showHeader, type]);\n\n    React.useEffect(() => {\n      const cal = calendarRef.current!\n      cal.on('select', () => {\n        onChange({ target: inputRef.current! }, type === 'time' ? cal.startTime : cal.startDate);\n        // window['c_' + type] = calendarRef.current\n      });\n      return () => {\n        calendarRef.current!.removeListeners('select');\n      };\n    }, [onChange]);\n\n    return (\n        <input\n          {...props}\n          ref={inputRef as any}\n          defaultValue={value}\n          id={id}\n          maxLength={maxLength}\n          name={name}\n          required={required}\n        />\n    )\n  })\n","import { createReactQueryHooks, createTRPCClient } from '@trpc/react';\nimport type { inferProcedureOutput } from '@trpc/server';\nimport { QueryClient } from 'react-query';\nimport superjson from 'superjson';\n// ℹ️ Type-only import:\n// https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html#type-only-imports-and-export\nimport type { AppRouter } from '../../../server';\n\n// create helper methods for queries, mutations, and subscriptionos\nexport const client = createTRPCClient<AppRouter>({\n  url: '/api/trpc',\n  transformer: superjson,\n});\n\n// create react query hooks for trpc\nexport const trpc = createReactQueryHooks({\n  client,\n  queryClient: new QueryClient(),\n});\n\n/**\n * This is a helper method to infer the output of a query resolver\n * @example type HelloOutput = inferQueryOutput<'hello'>\n */\nexport type inferQueryOutput<\n  TRouteKey extends keyof AppRouter['_def']['queries']\n> = inferProcedureOutput<AppRouter['_def']['queries'][TRouteKey]>;\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport dayjs from 'dayjs'\nimport Calendar from './Calendar'\nimport { Alarm } from '.prisma/client'\nimport { trpc } from '../utils/trpc'\nimport { AlarmCreateParam, AlarmEditParam, AlarmType, Duration, emptyAlarm, uid } from '../utils'\nimport TimePicker from 'rc-time-picker'\nimport moment from 'moment'\n\nexport function Form() {\n  const history = useHistory<{id?: string}>()\n  ;(window as any)['h'] = history\n  const locSearch = new URLSearchParams(history.location.search.slice(1))\n  const locId = locSearch.get('id')\n  console.log('locId', locId, history.location.search)\n  const allAlarms = trpc.useQuery(['alarms.all'], {\n    staleTime: 3000,\n  })\n  const [alarm, setAlarm] = useState(\n    locId && allAlarms.data?.find(a => a.id === locId) || emptyAlarm()\n  )\n\n\n  const editAlarm = trpc.useMutation('alarms.edit', {\n    async onMutate(alarm) {\n      await trpc.cancelQuery(['alarms.all']);\n      trpc.setQueryData(\n        ['alarms.all'],\n        allAlarms.data!.map(a => a.id === alarm.id ? {...a, ...alarm} : a)\n      );\n    },\n    onSettled: () => {\n      trpc.invalidateQuery(['alarms.all']);\n    },\n  })\n\n  const addAlarm = trpc.useMutation('alarms.add', {\n    async onMutate(alarm) {\n      await trpc.cancelQuery(['alarms.all']);\n    },\n    onSettled: () => {\n      trpc.invalidateQuery(['alarms.all']);\n    },\n  })\n\n  const save = (alarm: AlarmCreateParam | AlarmEditParam) => {\n    if (('id' in alarm) && alarm.id) {\n      editAlarm.mutate(alarm)\n    } else {\n      alarm.uid = uid\n      addAlarm.mutate(alarm)\n    }\n  }\n  function setField(key: keyof Alarm, value: Alarm[keyof Alarm]) {\n    setAlarm({\n      ...alarm,\n      [key]: value,\n    })\n  }\n  return (\n    <div className=\"form\">\n      <div className=\"field is-grouped\">\n        <label className=\"label\">标题:</label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder={alarm.title}\n            onChange={e => setField('title', e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"field is-grouped\">\n        <label className=\"label\">类型:</label>\n        <div className=\"control\">\n          <div className=\"select\">\n            <select\n              defaultValue={alarm.type}\n              onChange={e => {\n                setField('type', e.target.value)\n              }}\n            >\n              <option value={AlarmType.repeat}>循环</option>\n              <option value={AlarmType.once}>定时</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      {alarm.type === AlarmType.once && (\n        <div className=\"field is-grouped\">\n          <label className=\"label\">定时:</label>\n          <div className=\"control\">\n            <Calendar\n              className=\"input\"\n              type=\"time\"\n              value={new Date(alarm.duration + 16 * Duration.H1) as any}\n              onChange={(e, d) => {\n                let duration = new Date(0)\n                duration.setHours(d.getHours() + duration.getHours())\n                duration.setMinutes(d.getMinutes() + duration.getMinutes())\n                setField('timeout', Date.now() + duration.getTime())\n              }}\n            />\n          </div>\n        </div>\n      )}\n      {alarm.type === AlarmType.repeat && (\n      <div className=\"field is-grouped\" >\n        <label className=\"label\">循环:</label>\n        <div className=\"control\">\n          <TimePicker\n            showSecond={false}\n            defaultValue={moment(alarm.duration + 16 * Duration.H1)}\n            className=\"xxx\"\n            onChange={(d) => {\n              // let duration = new Date(0)\n              // duration.setHours(d.hours() + duration.getHours())\n              // duration.setMinutes(d.minutes() + duration.getMinutes())\n              setField('duration', d.hours() * Duration.H1 + d.minutes() * Duration.M1)\n            }}\n          />\n          {/* <Calendar\n            className=\"input\"\n            type=\"time\"\n            value={new Date(alarm.duration + 16 * Duration.H1) as any}\n            onChange={(e, d) => {\n              let duration = new Date(0)\n              duration.setHours(d.getHours() + duration.getHours())\n              duration.setMinutes(d.getMinutes() + duration.getMinutes())\n              setField('duration', duration.getTime())\n            }}\n          /> */}\n        </div>\n      </div>\n      )}\n      <div className=\"field is-grouped\">\n        <label className=\"label\">提前:</label>\n        <div className=\"control\">\n          <input type=\"number\" min={0} max={60 * 24} defaultValue={alarm.ahead} onChange={e => {\n            setField('ahead', Number(e.target.value) || 0)\n          }} />\n        </div>\n      </div>\n      <div className=\"field is-grouped\">\n        <label className=\"label\">通知:</label>\n        <div className=\"control\">\n          <input type=\"checkbox\" defaultChecked={alarm.notify} onChange={e => {\n            setField('notify', e.target.checked)\n          }} />\n        </div>\n      </div>\n      <div className=\"field is-grouped\">\n        <label className=\"label\">弹窗:</label>\n        <div className=\"control\">\n          <input type=\"checkbox\" defaultChecked={alarm.alert} onChange={e => {\n            setField('alert', e.target.checked)\n          }} />\n        </div>\n      </div>\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            onClick={e => {\n              save(alarm as AlarmCreateParam)\n              console.log('history', history)\n              history.goBack()\n            }}\n            className=\"button is-primary is-link\"\n          >\n            保存\n          </button>\n        </div>\n        <div className=\"control\">\n          <button\n            onClick={e => {\n              history.push('/')\n            }}\n            className=\"button is-link is-light\"\n          >\n            取消\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { Alarm } from \".prisma/client\"\nimport { AlarmEditParam, AlarmType, Duration } from \"./utils\"\n\nexport class AlarmManager {\n    timers: Map<string, any[]> = new Map()\n    constructor(public alarms: Alarm[], private save: (a: AlarmEditParam) => void) {\n      this.updateTimers()\n      ;(window as any)['alarmManager'] = this\n    }\n    notify(alarm: Alarm) {\n      const title = `${alarm.title} | 整点报时`\n      if (alarm.notify) {\n        new Notification(title, {\n          body: new Date().toLocaleString(),\n          vibrate: 1,\n          requireInteraction: true,\n        })\n      }\n      if (alarm.alert) {\n        alert(title)\n      }\n      console.log('notify', new Date().toLocaleString(), alarm)\n      // var audio = new Audio();\n      // audio.src= \"../sound/WindowsNotifyMessaging.wav\"\n      // audio.load()\n      // audio.play()\n    }\n    clearTimers(alarm: Alarm) {\n      let timer = this.timers.get(alarm.id) || []\n      for (const t of timer) {\n        clearTimeout(t)\n        clearInterval(t)\n      }\n      this.timers.delete(alarm.id)\n    }\n    updateTimers() {\n      for (const alarm of this.alarms) {\n        if (alarm.disabled || alarm.done) {\n          this.clearTimers(alarm)\n          continue\n        }\n        let timer = this.timers.get(alarm.id)\n        if (!timer) {\n          timer = []\n          console.log('updateTimers', alarm)\n          const now = Date.now()\n          if (alarm.type === AlarmType.once) {\n            let t1 = setTimeout(() => {\n              this.notify(alarm)\n              this.save({\n                ...alarm,\n                done: true\n              } as AlarmEditParam)\n            }, alarm.timeout - (now + alarm.ahead * Duration.M1))\n            timer.push(t1)\n          } else if (alarm.type === AlarmType.repeat) {\n            const recTimeout = () => {\n              const timeout = alarm.duration - (Date.now() + alarm.ahead * Duration.M1) % alarm.duration\n              let t1 = setTimeout(() => {\n                this.notify(alarm)\n                recTimeout()\n              }, timeout)\n              timer![0] = t1 // 用数组作为引用\n\n              console.log(`next repeat ${alarm.title}`, new Date(Date.now() + timeout).toLocaleString(), alarm)\n            }\n            recTimeout()\n          }\n          this.timers.set(alarm.id, timer)\n        }\n      }\n    }\n}\n","import React, { useEffect } from 'react'\nimport dayjs from 'dayjs'\n\nimport { ReactSortable } from 'react-sortablejs'\nimport { trpc } from '../utils/trpc'\nimport { Alarm } from '.prisma/client'\nimport { useHistory } from 'react-router-dom'\nimport { nanoid } from 'nanoid'\nimport { AlarmEditParam, uid } from '../utils'\nimport { AlarmManager } from '../alarm-manager'\n\nexport function List() {\n  let history = useHistory()\n  const allAlarms = trpc.useQuery(['alarms.all', uid], {\n    staleTime: 3000,\n  })\n  const sortAlarms = trpc.useMutation('alarms.sortAll', {\n    async onMutate(ids) {\n      await trpc.cancelQuery(['alarms.all'])\n      let alarmMap = new Map(allAlarms.data?.map((a) => [a.id, a]))\n      trpc.setQueryData(\n        ['alarms.all'],\n        ids.map((id) => alarmMap.get(id)!).filter(Boolean)\n      )\n    },\n    onSettled: () => {\n      trpc.invalidateQuery(['alarms.all'])\n    },\n  })\n  const saveSortList = async (newAlarms: Alarm[]) => {\n    sortAlarms.mutate(newAlarms.map((a) => a.id))\n  }\n  const deleteAlarm = trpc.useMutation('alarms.delete', {\n    async onMutate(alarmId) {\n      await trpc.cancelQuery(['alarms.all'])\n      trpc.setQueryData(\n        ['alarms.all'],\n        allAlarms.data!.filter((t) => t.id != alarmId)\n      )\n    },\n    onSettled: () => {\n      trpc.invalidateQuery(['alarms.all'])\n    },\n  })\n  const editAlarm = trpc.useMutation('alarms.edit', {\n    async onMutate(alarm) {\n      await trpc.cancelQuery(['alarms.all'])\n      trpc.setQueryData(\n        ['alarms.all'],\n        allAlarms.data!.map((a) => (a.id === alarm.id ? { ...a, ...alarm } : a))\n      )\n    },\n    onSettled: () => {\n      trpc.invalidateQuery(['alarms.all'])\n    },\n  })\n  useEffect(() => {\n    if (allAlarms.data) {\n      new AlarmManager(allAlarms.data, (a: AlarmEditParam) => {\n        editAlarm.mutate(a)\n      })\n    }\n  }, [allAlarms.data])\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">\n        <span style={{ flex: 1 }}>整点报时</span>\n        <button\n          className=\"button is-link is-small\"\n          style={{ marginRight: 10 }}\n          title=\"保存永久链接\"\n          onClick={(e) => {\n            let u = new URL(location.href)\n            u.searchParams.append('id', nanoid())\n            location.href = u.toString()\n          }}\n        >\n          <i className=\"fas fa-external-link-alt\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          className=\"button is-primary is-small\"\n          title=\"添加新的提醒\"\n          onClick={(e) => {\n            history.push(`/form`)\n          }}\n        >\n          <i className=\"fas fa-plus\" aria-hidden=\"true\"></i>\n        </button>\n      </p>\n      <ReactSortable list={allAlarms.data || []} setList={saveSortList}>\n        {allAlarms.data?.map((a) => {\n          return (\n            <a key={a.id} className=\"panel-block\">\n              <span className=\"panel-icon\">\n                <i\n                  className={`fas fa-${\n                    a.type === 'once' ? 'hourglass-half' : 'sync'\n                  }`}\n                  aria-hidden=\"true\"\n                ></i>\n              </span>\n              <span className=\"ca-title\">\n                {a.title}\n                <div className=\"ca-subtitle\">\n                  {a.type === 'once'\n                    ? dayjs(Number(a.timeout)).format('YYYY/MM/DD HH:mm')\n                    : dayjs(Number(a.duration)).add(-8, 'h').format('HH:mm')}\n                </div>\n              </span>\n              <i\n                className={`fas fa-times remove-btn`}\n                aria-hidden=\"true\"\n                onClick={(e) => {\n                  let b = confirm(`确定要删除「${a.title}」吗?`)\n                  if (b) {\n                    deleteAlarm.mutate(a.id)\n                  }\n                }}\n              ></i>\n              <i\n                className={`fas fa-cog config-btn`}\n                aria-hidden=\"true\"\n                onClick={(e) => {\n                  history.push(`/form?id=${a.id}`)\n                }}\n              ></i>\n              <div className=\"field\">\n                <input\n                  id={a.id}\n                  type=\"checkbox\"\n                  className=\"switch\"\n                  defaultChecked={!a.disabled}\n                  onChange={(e) => {\n                    // save({ ...a, disabled: !e.target.checked })\n                    editAlarm.mutate({\n                      ...a,\n                      disabled: !e.target.checked,\n                    } as any)\n                  }}\n                />\n                <label htmlFor={a.id}></label>\n              </div>\n            </a>\n          )\n        })}\n      </ReactSortable>\n    </nav>\n  )\n}\n","\nimport 'bulma/css/bulma.min.css'\nimport 'bulma-switch/dist/css/bulma-switch.min.css'\nimport './App.scss'\nimport React from 'react'\nimport { render } from 'react-dom'\nimport cx from 'clsx'\nimport { Switch, Route, HashRouter as Router, useLocation } from 'react-router-dom'\nimport { Form } from './form'\nimport { List } from './list'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n// import { history } from '../comps/utils'\n\nfunction App() {\n  let location = useLocation()\n  return (\n    <TransitionGroup>\n      <Switch>\n        <Route path=\"/form\">\n          <Form />\n        </Route>\n        <Route path=\"/\">\n          <List />\n        </Route>\n      </Switch>\n    </TransitionGroup>\n  )\n}\n\nexport default function Root() {\n  return (\n    <div className={cx('root', 'container')}>\n      <Router>\n        <App />\n      </Router>\n    </div>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function && process.env.NODE_ENV === 'development') {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}